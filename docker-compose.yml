services:
  mongoDB:
    image: mongo:6.0.4
    container_name: mongoDB
    ports:
      - "27017:27017"
    networks:
      - ngnix_network
    volumes:
      - IsStillOnlineVolume:/data/db
      - ./mongoDB/initdb.d/:/docker-entrypoint-initdb.d/
    command: --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ADMIN_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ADMIN_PASS}
      MONGO_INITDB_DATABASE: IsStillOnlineDB
  
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    networks:
      - ngnix_network
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_ADMIN_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_ADMIN_PASS}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_WEB_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_WEB_PASS}
      ME_CONFIG_MONGODB_SERVER: mongoDB
      ME_CONFIG_MONGODB_URL: mongodb://${MONGODB_ADMIN_USER}:${MONGODB_ADMIN_PASS}@mongoDB:27017?authSource=admin
    depends_on:
      - mongoDB
  
  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: IsStillOnlineServer
    ports:
      - "5000:3000"
    networks:
      - ngnix_network
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - mongoDB
    command: npm start

  
volumes:
  IsStillOnlineVolume:
    driver: local
    driver_opts:
      type: none
      device: ${MONGODB_VOLUME_PATH}
      o: bind
  
networks:
  ngnix_network:
    external: true